<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Tim Holzschuh</title>
    <link>http://localhost:1313/posts/</link>
    <description>Recent content in Posts on Tim Holzschuh</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Tue, 23 Aug 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using espanso to conveniently type unicode characters</title>
      <link>http://localhost:1313/posts/espanso/</link>
      <pubDate>Tue, 23 Aug 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/espanso/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://math.berkeley.edu/~phaine/&#34;&gt;Peter Haine&lt;/a&gt; recently made me aware of the possibility of using a &lt;code&gt;text expander&lt;/code&gt; to conveniently type unicode characters like Œ†, ‚ü∂ and ùíû by typing things like &lt;code&gt;:Pi:&lt;/code&gt;, &lt;code&gt;:to:&lt;/code&gt; and &lt;code&gt;:scC:&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;After a quick search for available options, I decided to give &lt;a href=&#34;https://espanso.org/&#34;&gt;&lt;code&gt;espanso&lt;/code&gt;&lt;/a&gt; a try.&lt;/p&gt;&#xA;&lt;p&gt;While the official &lt;a href=&#34;https://hub.espanso.org/&#34;&gt;package hub&lt;/a&gt; offers some packages with snippets relevant to mathematicians, I wasn&amp;rsquo;t really satisfied with any of the available options and instead started adding all the symbols I might need manually.&lt;/p&gt;</description>
    </item>
    <item>
      <title>tikzcd snippets for VS Code</title>
      <link>http://localhost:1313/posts/latex-snippets/</link>
      <pubDate>Thu, 11 Aug 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/latex-snippets/</guid>
      <description>&lt;p&gt;For writing LaTeX documents, I use &lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;VS Code&lt;/a&gt; together with the &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=James-Yu.latex-workshop&#34;&gt;&lt;code&gt;latex-workshop&lt;/code&gt;&lt;/a&gt; extension.&lt;/p&gt;&#xA;&lt;p&gt;One thing I particularly like about VS Code is its built-in support for &lt;a href=&#34;https://code.visualstudio.com/docs/editor/userdefinedsnippets&#34;&gt;snippets&lt;/a&gt; and how easy it is to implement your own.&lt;/p&gt;&#xA;&lt;p&gt;As there aren&amp;rsquo;t any extensions in the &lt;a href=&#34;https://marketplace.visualstudio.com/vscode&#34;&gt;marketplace&lt;/a&gt; providing snippets for commutative diagrams, I implemented some using &lt;code&gt;tikz-cd&lt;/code&gt; on my own:&lt;/p&gt;&#xA;&lt;h1 id=&#34;demonstration&#34;&gt;Demonstration&lt;/h1&gt;&#xA;&lt;p&gt;This is what using the snippets looks like:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/latex-snippets_demo.gif&#34; alt=&#34;snippet&#34;&gt;&lt;/p&gt;&#xA;&lt;details&gt;&#xA;&lt;summary&gt;&#xA;Result:&#xA;&lt;/summary&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/latex-snippets_diagram.png&#34; alt=&#34;result&#34;&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;I cycle through the preselected &lt;code&gt;X&lt;/code&gt;, &lt;code&gt;Y&lt;/code&gt;, &lt;code&gt;S&lt;/code&gt;, &lt;code&gt;T&lt;/code&gt; by pressing &lt;code&gt;tab&lt;/code&gt;, which makes it very convenient to change the objects&amp;rsquo; names appearing in the diagram.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Declarative and reproducible system and user management with NixOS</title>
      <link>http://localhost:1313/posts/declarative-and-reproducible-system-and-user-management-with-nixos/</link>
      <pubDate>Wed, 14 Jul 2021 18:15:26 +0200</pubDate>
      <guid>http://localhost:1313/posts/declarative-and-reproducible-system-and-user-management-with-nixos/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been using &lt;a href=&#34;https://nixos.org/&#34;&gt;NixOS&lt;/a&gt; as my main operating system for quite some time now.&lt;/p&gt;&#xA;&lt;p&gt;As I recently upgraded my computer equipment by acquiring a new laptop, I decided that it&amp;rsquo;s time to invest some more time into further capitalizing on the features of NixOS.&#xA;The main purpose of this post is to collect all the things I learned while doing so in a single place so that I&amp;rsquo;ll always be able to look it up again if need be.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using LaTeX with Hakyll</title>
      <link>http://localhost:1313/posts/using-latex-with-hakyll/</link>
      <pubDate>Tue, 12 Jan 2021 18:13:04 +0200</pubDate>
      <guid>http://localhost:1313/posts/using-latex-with-hakyll/</guid>
      <description>&lt;p&gt;Since &lt;a href=&#34;https://jaspervdj.be/hakyll/&#34;&gt;Hakyll&lt;/a&gt; is tightly integrated with &lt;a href=&#34;https://pandoc.org/&#34;&gt;Pandoc&lt;/a&gt;, it&amp;rsquo;s easy to use LaTeX with Hakyll by enabling Pandoc&amp;rsquo;s LaTeX compile features.&#xA;Most explanations I found online, like &lt;a href=&#34;http://travis.athougies.net/posts/2013-08-13-using-math-on-your-hakyll-blog.html&#34;&gt;this&lt;/a&gt; one, seem to be quite outdated though and they don&amp;rsquo;t work verbatim.&lt;/p&gt;&#xA;&lt;p&gt;The basic idea still is to set up a custom pandoc compiler using the&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-haskell&#34; data-lang=&#34;haskell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;pandocCompilerWith&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ReaderOptions&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;WriterOptions&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Compiler&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;Item&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;function, but the internals used in the &lt;code&gt;WriterOptions&lt;/code&gt; have changed.&#xA;Specifically, enabling several extensions at once is no longer passed around as a &lt;code&gt;Set Extension&lt;/code&gt;. Instead, there is a new data type &lt;code&gt;Extensions&lt;/code&gt; introduced to handle several Extensions at once.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
